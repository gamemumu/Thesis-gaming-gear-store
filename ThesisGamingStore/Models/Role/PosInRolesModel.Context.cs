//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ThesisGamingStore.Models.Role
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class PosInRolesEntities : DbContext
    {
        public PosInRolesEntities()
            : base("name=PosInRolesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<C_Roles> C_Roles { get; set; }
        public DbSet<EMPLOYEE> EMPLOYEE { get; set; }
        public DbSet<POSITION> POSITION { get; set; }
    
        public virtual int sp_employee_INSERT(string posID, string idcard, string email, string fname, string lname, string address, string sex, Nullable<decimal> salary, string username, string password)
        {
            var posIDParameter = posID != null ?
                new ObjectParameter("PosID", posID) :
                new ObjectParameter("PosID", typeof(string));
    
            var idcardParameter = idcard != null ?
                new ObjectParameter("Idcard", idcard) :
                new ObjectParameter("Idcard", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("Lname", lname) :
                new ObjectParameter("Lname", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(decimal));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_employee_INSERT", posIDParameter, idcardParameter, emailParameter, fnameParameter, lnameParameter, addressParameter, sexParameter, salaryParameter, usernameParameter, passwordParameter);
        }
    
        public virtual int sp_position_INSERT(string dEPID, string posName)
        {
            var dEPIDParameter = dEPID != null ?
                new ObjectParameter("DEPID", dEPID) :
                new ObjectParameter("DEPID", typeof(string));
    
            var posNameParameter = posName != null ?
                new ObjectParameter("PosName", posName) :
                new ObjectParameter("PosName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_position_INSERT", dEPIDParameter, posNameParameter);
        }
    
        public virtual int spPosInRoles_INSERT(string roleID, string posID)
        {
            var roleIDParameter = roleID != null ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(string));
    
            var posIDParameter = posID != null ?
                new ObjectParameter("PosID", posID) :
                new ObjectParameter("PosID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPosInRoles_INSERT", roleIDParameter, posIDParameter);
        }
    
        public virtual int spRoles_INSERT(string roleName)
        {
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRoles_INSERT", roleNameParameter);
        }
    }
}
